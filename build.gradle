plugins {
    id 'java'
    id 'maven-publish'
}

group = 'com.github.strubium'
version = '1.0.5'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

def lwjglVersion = '3.3.6'
def imguiVersion = '1.86.11'

def baseDependencies = [
        "org.lwjgl:lwjgl:$lwjglVersion",
        "org.lwjgl:lwjgl-opengl:$lwjglVersion",
        "org.lwjgl:lwjgl-glfw:$lwjglVersion",
        "org.lwjgl:lwjgl-stb:$lwjglVersion",
        "io.github.spair:imgui-java-binding:$imguiVersion",
        "io.github.spair:imgui-java-lwjgl3:$imguiVersion",
        "io.github.spair:imgui-java-app:$imguiVersion",
        "org.jsoup:jsoup:1.17.2"
]

def natives = [
        windows: [
                "org.lwjgl:lwjgl:$lwjglVersion:natives-windows",
                "org.lwjgl:lwjgl-opengl:$lwjglVersion:natives-windows",
                "org.lwjgl:lwjgl-glfw:$lwjglVersion:natives-windows",
                "org.lwjgl:lwjgl-stb:$lwjglVersion:natives-windows",
                "io.github.spair:imgui-java-natives-windows:$imguiVersion"
        ],
        linux: [
                "org.lwjgl:lwjgl:$lwjglVersion:natives-linux",
                "org.lwjgl:lwjgl-opengl:$lwjglVersion:natives-linux",
                "org.lwjgl:lwjgl-glfw:$lwjglVersion:natives-linux",
                "org.lwjgl:lwjgl-stb:$lwjglVersion:natives-linux",
                "io.github.spair:imgui-java-natives-linux:$imguiVersion"
        ],
        macos: [
                "org.lwjgl:lwjgl:$lwjglVersion:natives-macos",
                "org.lwjgl:lwjgl-opengl:$lwjglVersion:natives-macos",
                "org.lwjgl:lwjgl-glfw:$lwjglVersion:natives-macos",
                "org.lwjgl:lwjgl-stb:$lwjglVersion:natives-macos",
                "io.github.spair:imgui-java-natives-macos:$imguiVersion"
        ]
]

// Apply base dependencies to implementation configuration:
dependencies {
    baseDependencies.each { dep ->
        implementation dep
    }
}

// We'll create custom configurations for each platform:
configurations {
    windowsNatives
    linuxNatives
    macosNatives
}

// Add platform-specific native dependencies:
dependencies {
    natives.windows.each { dep -> windowsNatives dep }
    natives.linux.each { dep -> linuxNatives dep }
    natives.macos.each { dep -> macosNatives dep }
}

// Task to create platform-specific runtime JARs including native libs
def createPlatformJarTask(String platform, Configuration nativeConfig) {
    return tasks.register("jar${platform.capitalize()}", Jar) {
        group = "build"
        description = "Assembles a jar including $platform native dependencies"
        archiveClassifier.set(platform)

        from sourceSets.main.output

        dependsOn configurations.runtimeClasspath
        from {
            nativeConfig.collect { zipTree(it) }
        }

        manifest {
            attributes(
                    "Implementation-Title": project.name,
                    "Implementation-Version": version
            )
        }
    }
}

// Store the returned TaskProviders to variables:
def jarWindows = createPlatformJarTask("windows", configurations.windowsNatives)
def jarLinux = createPlatformJarTask("linux", configurations.linuxNatives)
def jarMacos = createPlatformJarTask("macos", configurations.macosNatives)

java {
    withSourcesJar()
    withJavadocJar()
}

// Publishing each platform jar with classifier
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact(jarWindows) {
                classifier = "windows"
            }
            artifact(jarLinux) {
                classifier = "linux"
            }
            artifact(jarMacos) {
                classifier = "macos"
            }
        }
    }
}

wrapper {
    gradleVersion = "8.8"
    distributionType = Wrapper.DistributionType.ALL
}
